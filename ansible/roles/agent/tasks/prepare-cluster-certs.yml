---

- name: Set certificate facts
  set_fact:
    certs_dir: "{{ home_dir }}/cert-files"
    ca_key: "kube-ca-key.pem"
    ca_cert: "{{ kube_ca_cert | basename }}"
    cluster_certs:
      - { cn: etcd, cnf: etcd }
      - { cn: api-server, cnf: api-server }
      - { cn: system-account-user, cnf: user }
      - { cn: cluster-admin-user, cnf: user }
      - { cn: service-account-tokens, cnf: user }
    master_ssh_id: kubernetes-ssh-id

- name: Ensure certs dir
  file: path={{ item }} state=directory  mode=0700
  with_items:
    - "{{ certs_dir }}"
  changed_when: false

- name: Create cluster CA
  shell: |
    openssl genrsa -out {{ ca_key }} 2048
    openssl req -x509 -new -nodes -key {{ ca_key }} -days 10000 -out {{ ca_cert }} -subj "/CN=kube-ca"  2>/dev/null
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ certs_dir }}/{{ ca_cert }}"

- name: Create TLS cert request openssl configuration files (.cnf)
  template: src={{ item.cnf }}.csr.cnf.j2 dest={{ certs_dir }}/{{ item.cn }}.csr.cnf
  with_items: 
    - "{{ cluster_certs }}"
  register: command_result 
 
- name: Allow certs to be recreated when request configuration files change 
  file: path={{ certs_dir }}/{{ item.item }}.tar state=absent
  with_items: "{{ command_result.results }}"
  when: "{{ item | changed }}"

- name: Create and sign TLS certs
  shell: |
    openssl genrsa -out {{ item.cn }}-key.pem  2048
    openssl req -new -key {{ item.cn }}-key.pem -out {{ item.cn }}.csr -subj "/CN={{ item.cn }}" -config {{ item.cn }}.csr.cnf
    openssl x509 -req -in {{ item.cn }}.csr -CA {{ ca_cert }} -CAkey {{ ca_key }} -CAcreateserial -out {{ item.cn }}.pem -days 365 -extensions v3_req -extfile {{ item.cn }}.csr.cnf
    tar -cf {{ item.cn }}.tar {{ item.cn }}-key.pem {{ item.cn }}.pem
  with_items: 
    - "{{ cluster_certs }}"
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ item.cn }}.tar"

- name: Create ssh key from master>node communications
  shell: |
    ssh-keygen -t rsa -b 4096 -C "kubernetes-master" -N '' -f {{ master_ssh_id }}
    tar -cf {{ master_ssh_id }}.tar {{ master_ssh_id }} {{ master_ssh_id }}.pub
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ master_ssh_id }}.tar"



