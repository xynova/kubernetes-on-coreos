---

- name: Set certificate facts
  set_fact:
    certs_dir: "{{ home_dir }}/cert-files"
    ca_key: "kube-ca-key.pem"
    ca_cert: "{{ kube_ca_cert | basename }}"

- name: Ensure certs dir
  file: path={{ item }} state=directory  mode=0700
  with_items:
    - "{{ certs_dir }}"
    - "{{ work_dir }}/certs"

- name: Create cluster CA
  shell: |
    openssl genrsa -out {{ ca_key }} 2048
    openssl req -x509 -new -nodes -key {{ ca_key }} -days 10000 -out {{ ca_cert }} -subj "/CN=kube-ca"  2>/dev/null
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ certs_dir }}/{{ ca_cert }}"

- name: Create TLS cert request openssl configuration files (.cnf)
  template: src={{ item }}.csr.cnf.j2 dest={{ certs_dir }}/{{ item }}.csr.cnf
  with_items:
    - etcd
    - api-server
    - system-account-user
  register: command_result 
 
- name: Allow certs to be recreated when request configuration files change 
  file: path={{ certs_dir }}/{{ item.item }}.tar state=absent
  with_items: "{{ command_result.results }}"
  when: "{{ item | changed }}"

- name: Create and sign TLS certs
  shell: |
    openssl genrsa -out {{ item }}-key.pem  2048
    openssl req -new -key {{ item }}-key.pem -out {{ item }}.csr -subj "/CN={{ item }}" -config {{ item }}.csr.cnf
    openssl x509 -req -in {{ item }}.csr -CA {{ ca_cert }} -CAkey {{ ca_key }} -CAcreateserial -out {{ item }}.pem -days 365 -extensions v3_req -extfile {{ item }}.csr.cnf
    tar -cf {{ item }}.tar {{ item }}-key.pem {{ item }}.pem
  with_items:
    - etcd
    - api-server 
    - system-account-user
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ certs_dir }}/{{ item }}.tar"

- name: Copy cert files to {{ work_dir }}
  shell: >
    cp -f {{ certs_dir }}/{{ item }} {{ work_dir }}/certs/{{ item }} 
  with_items:
    - "{{ ca_cert }}"
    - etcd.tar
    - api-server.tar
    - system-account-user.tar
  changed_when: false

