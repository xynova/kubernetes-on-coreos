
apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: {{ docker_hyperkube }}
    command:
    - /hyperkube
    - apiserver
    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota
    #- --advertise-address={{ machine_ip }} # using this prevents the auto creation of a cluster svc
    - --allow-privileged=true
    - --apiserver-count={{ groups['kube-masters'] | length }}
    - --authorization-mode=AlwaysAllow
    #- --authorization-mode=ABAC 
    #- --authorization-policy-file=/var/lib/kubernetes/authorization-policy.jsonl
    - --bind-address={{ machine_ip }}  # explicitly set as vagrant eth0 points to nowhere   
    - --client-ca-file={{ kube_ca_cert }}
    - --enable-swagger-ui=true 
    - --etcd-cafile={{ kube_ca_cert }}
    #- --etcd-certfile={{ kube_systemAccount_cert }}  # https://github.com/kubernetes/kubernetes/issues/27343
    #- --etcd-keyfile={{ kube_systemAccount_key }}    # https://github.com/kubernetes/kubernetes/issues/27343
    - --etcd-prefix=/registry
    - --etcd-quorum-read=false
    - --etcd-servers={{ etcd_endpoints }}
    - --insecure-bind-address=127.0.0.1
    - --insecure-port=8080
        #--kubelet-certificate-authority="": Path to a cert. file for the certificate authority.
        #--kubelet-client-certificate="": Path to a client cert file for TLS.
        #--kubelet-client-key="": Path to a client key file for TLS.
        #--kubelet-https[=true]: Use https for kubelet connections
        #--kubelet-timeout=5s: Timeout for kubelet operations
        #--kubernetes-service-node-port=0: If non-zero, the Kubernetes master service (which apiserver creates/maintains) will be of type NodePort, using this as the value of the port. If zero, the Kubernetes master service will be of type ClusterIP.
    - --secure-port={{ master_endpoint_port }}   
    - --service-account-key-file={{ serviceAccountTokens_cert }}
    - --service-account-lookup=false
    - --service-cluster-ip-range={{ kube_services_network_block }}
    - --service-node-port-range=30000-32767
    - --ssh-keyfile={{ kubernetesSshId_priv }} # use secure SSH proxy to the nodes, using this user keyfile
    - --ssh-user={{ kubernetesSshId_user }}
    - --tls-cert-file={{ apiServer_tls_cert }}
    - --tls-private-key-file={{ apiServer_tls_key }}
    #- --token-auth-file=/var/lib/kubernetes/token.csv
    - --runtime-config=extensions/v1beta1=true,extensions/v1beta1/thirdpartyresources=true
    ports:
    - containerPort: {{ master_endpoint_port }}
      hostPort: {{ master_endpoint_port }}
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: {{ kube_certs_dir }}
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: {{ kube_ca_cert | dirname }}
      name: ssl-certs-host
      readOnly: true
    - mountPath: /home/core/.ssh
      name: ssh-key-host
      readOnly: true
  volumes:
  - hostPath:
      path: {{ kube_certs_dir }}
    name: ssl-certs-kubernetes
  - hostPath:
      path: {{ kube_ca_cert | dirname }}
    name: ssl-certs-host
  - hostPath:
      path: /home/core/.ssh
    name: ssh-key-host


