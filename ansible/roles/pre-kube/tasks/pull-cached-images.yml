---

- block:
  - name: Create temporary DOCKER_OPTS systemd directories
    file: path=/etc/systemd/system/{{ item }} recurse=true state=directory
    with_items:
      - docker.service.d
      - early-docker.service.d
  
  - name: Create temporary DOCKER_OPTS to pull cached images from {{ docker_cache_registry_url }}
    template: src=temp-registry-dockeropts.j2 dest=/etc/systemd/system/{{ item }}/10-temp-registry-dockeropts.conf
    with_items:
      - docker.service.d
      - early-docker.service.d

  - name: Cleanup previous docker network state
    shell: |
      systemctl stop docker
      ifconfig docker0 down 2> /dev/null
      brctl delbr docker0 2> /dev/null
      rm -r /var/lib/docker/network
    ignore_errors: true

  - name: Restart Docker services to pick-up new DOCKER_OPTS
    command: "{{ item }}" 
    with_items:
      - systemctl daemon-reload 
      - systemctl restart early-docker
      - systemctl restart docker 
  become: true
  become_method: sudo

#-------------------------------------------

- name: Pull CoreOS flannel image
  shell: >
    docker --host {{ coreos_docker_flannel_socket }}  images | grep '{{ docker_cache_registry_url }}/{{ item.name }} *{{ item.tag }}' > /dev/null 
    || docker --host {{ coreos_docker_flannel_socket }} pull {{ docker_cache_registry_url }}/{{ item.name}}:{{ item.tag }}
  with_items:
    - "{{ docker_flannel_images }}"
  register: command_result
  changed_when: command_result.stdout_lines | length > 0

- name: Pull Kubernetes Master docker images
  shell: >
    docker images | grep '{{ docker_cache_registry_url }}/{{ item.name }} *{{ item.tag }}' > /dev/null 
    || docker pull {{ docker_cache_registry_url }}/{{ item.name}}:{{ item.tag }}
  with_items:
    - "{{ docker_kube_hyperkube_image }}"
  register: command_result
  changed_when: command_result.stdout_lines | length > 0
  when: kube_node_type == "master"
  
- name: Pull Kubernetes Worker docker images
  shell: >
    docker images | grep '{{ docker_cache_registry_url }}/{{ item.name }} *{{ item.tag }}' > /dev/null 
    || docker pull {{ docker_cache_registry_url }}/{{ item.name}}:{{ item.tag }}
  with_items:
    - "{{ docker_kube_hyperkube_image }}"
    - "{{ docker_kube_dns_images }}"
    - "{{ docker_kube_ui_images }}"
    - "{{ docker_kube_heapster_images }}"
  register: command_result
  changed_when: command_result.stdout_lines | length > 0
  when: kube_node_type == "worker"

#-------------------------------------------

- block:
  - name: Cleanup temporary DOCKER_OPTS required to pull cached images
    file: path=/etc/systemd/system/{{ item }} state=absent
    with_items:
      - docker.service.d
      - early-docker.service.d
  become: true
  become_method: sudo

