---

- name: Copy root-CA cert from agent
  synchronize: 
    src: "{{ work_certs_dir }}"
    dest: "{{ home_dir }}"
    mode: push 
    compress: no
    recursive: true 
    rsync_opts: "--include='*/' --include='{{ kube_ca_cert | basename }}*' --exclude='*'"
  delegate_to: "{{ groups['agent'] | first }}"

- name: Copy etcd cert from agent
  synchronize: 
    src: "{{ work_certs_dir }}"
    dest: "{{ home_dir }}"
    mode: push 
    compress: no
    recursive: true 
    rsync_opts: "--include='*/' --include='etcd.tar' --exclude='*'"
  delegate_to: "{{ groups['agent'] | first }}"
  when: "'etcd' in group_names"

- name: Copy system-account cert from agent
  synchronize: 
    src: "{{ work_certs_dir }}"
    dest: "{{ home_dir }}"
    mode: push 
    compress: no
    recursive: true 
    rsync_opts: "--include='*/' --include='system-account-user.tar' --exclude='*'"
  delegate_to: "{{ groups['agent'] | first }}"
  when: "'kube-control-nodes' in group_names"

- name: Copy api-server cert from agent
  synchronize: 
    src: "{{ work_certs_dir }}"
    dest: "{{ home_dir }}"
    mode: push 
    compress: no
    recursive: true 
    rsync_opts: "--include='*/' --include='api-server.tar' --include='service-account-tokens.tar' --exclude='*'"
  delegate_to: "{{ groups['agent'] | first }}"
  when: "'kube-masters' in group_names"

- name: Copy cluster-admin cert from agent
  synchronize: 
    src: "{{ work_certs_dir }}"
    dest: "{{ home_dir }}"
    mode: push 
    compress: no
    recursive: true 
    rsync_opts: "--include='*/' --include='cluster-admin-user.tar' --exclude='*'"
  delegate_to: "{{ groups['agent'] | first }}"
  when: "'kube-control-nodes' in group_names"


- block:
  - name: Move kube-ca to /etc/ssl/certs and reload certs
    shell: >
      cp {{ work_certs_dir }}/{{ kube_ca_cert | basename }} {{ kube_ca_cert }} 
      && update-ca-certificates
    args:
      creates: "{{ kube_ca_cert }}"

  - name: Set cluster certificate permission and ownership
    file: path={{ kube_ca_cert }} mode=0444 owner=root group=root 

  become: true
  become_method: sudo


